generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model Product {
  id          String        @id
  name        String
  price       Decimal       @db.Decimal(10, 2)
  stock       Int
  createdAt   DateTime      @default(now())
  updatedAt   DateTime
  SaleProduct SaleProduct[]
}

model Sale {
  id          String        @id
  date        DateTime
  createdAt   DateTime      @default(now())
  updatedAt   DateTime
  SaleProduct SaleProduct[]
}

model SaleProduct {
  id        String   @id
  saleId    String
  productId String
  quantity  Int
  unitPrice Decimal  @db.Decimal(10, 2)
  createdAt DateTime @default(now())
  updatedAt DateTime
  Product   Product  @relation(fields: [productId], references: [id], onDelete: Cascade)
  Sale      Sale     @relation(fields: [saleId], references: [id], onDelete: Cascade)

  @@index([productId])
  @@index([saleId])
}

model andon {
  id                 String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  no                 Int?
  chk                String?
  status             String?
  equipment_line     String?
  andon_process      String?
  andon_no           Int?
  main_sub           String?
  start              DateTime? @db.Timestamp(6)
  end                DateTime? @db.Timestamp(6)
  run_time_hms       String?
  run_time_sec       Int?
  warning_stop       String?
  andon_type         String?
  cause_department   String?
  cause_department_1 String?
  reason             String?
  andon_time         Int?
}

model andon_monthly_top_defects {
  id                   String    @id @unique @db.Uuid
  year_month           String?   @db.VarChar(7)
  andon_process        String?   @db.VarChar(50)
  equipment_line       String?   @db.VarChar(50)
  reason               String?   @db.VarChar(200)
  end_date             DateTime? @db.Timestamp(6)
  cause_department     String?   @db.VarChar(50)
  andon_time           Int?
  createdat            DateTime? @default(now()) @db.Timestamp(6)
  status               String?   @default("NG") @db.VarChar(2)
  action_plan_file_url String?
}

model manhour {
  id                           String    @id @default(dbgenerated("gen_random_uuid()")) @db.Uuid
  organization                 String?
  line                         String?
  shift                        String?
  work_part                    String?
  work_date                    DateTime? @db.Date
  model_or_model_suffix        String?
  total_working_time           Float?
  net_working_time             Float?
  production_quantity          Int?
  uph                          Float?
  yield_man_hour               Float?
  total_attendance_man_hour    Float?
  direct_man_hour              Float?
  indirect_man_hour            Float?
  idle_man_hour                Float?
  controllable_idle_man_hour   Float?
  uncontrollable_idle_man_hour Float?
  rework_man_hour              Float?
  net_working_man_hour         Float?
  direct_on_operation          Int?
  indirect_on_operation        Int?
  total_on_operation           Int?
}
